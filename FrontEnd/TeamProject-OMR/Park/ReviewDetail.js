import { useEffect, useState } from "react";
import { View, Text, StyleSheet, ScrollView, ActivityIndicator, Image, TouchableOpacity } from "react-native";
import review_sample from '../assets/review_sample.jpg'

// ÎåìÍ∏Ä Ïª¥Ìè¨ÎÑåÌä∏ Î∂ÑÎ¶¨
const Comment = ({ user, text, date, likes }) => (
    <View style={styles.commentBox}>
        <View style={styles.commentHeader}>
            <Text style={styles.commentUser}>{user}</Text>
            <Text style={styles.commentDate}>{date}</Text>
        </View>
        <Text style={styles.commentText}>{text}</Text>
        <View style={styles.commentFooter}>
            <TouchableOpacity>
                <Text style={styles.replyBtn}>ÎãµÍ∏Ä</Text>
            </TouchableOpacity>
            <TouchableOpacity>
                <Text style={styles.reportBtn}>Ïã†Í≥†</Text>
            </TouchableOpacity>
            <View style={styles.commentLike}>
                <Text style={styles.likeIcon}>‚ô°</Text>
                <Text style={styles.likeCount}>{likes}</Text>
            </View>
        </View>
    </View>
);

// ÏÉòÌîå ÎåìÍ∏Ä
const sampleComments = [
    {
        id: 1,
        user: "Indominus Rex",
        text: "12ÏÑ∏ Í¥ÄÎûåÍ∞Ä „Öã„Öã„Öã",
        date: "2015.6.16. 11:43",
        likes: 0,
    },
    {
        id: 2,
        user: "ÌïÑÏÇ¨Ïù¥Îãù",
        text: "ÏïÑÏù¥Îì§Ïù¥Îûë Í∞ôÏù¥ Î≥¥Îü¨Í∞ÄÎ©¥ Îî± Ï¢ãÏùÑÎßåÌïú ÏòÅÌôîÍµ∞Ïöî. „Öé„Öé",
        date: "2015.6.16. 16:03",
        likes: 0,
    },
];

const ReviewDetail = ({ route }) => {
    const { reviewId } = route.params;
    const [review, setReview] = useState(null);
    const [loading, setLoading] = useState(true);

    const sample = {
        id: reviewId,
        title: "ÏºÄÏù¥Ìåù Îç∞Î™¨ ÌóåÌÑ∞Ïä§",
        author: "ÏûëÏÑ±Ïûê",
        rating: 6.4,
        content: [
            "Ïùå...ÏùºÎã® ÏöîÏ¶ò ÏÉÅÏòÅÌïòÎäî ÏòÅÌôîÏ§ëÏóê Î≥ºÎßåÌïúÍ≤å 'Ï•¨ÎùºÍ∏∞ÏõîÎìú' Í∞ôÏïÑÏÑú Ï†ÄÎÖÅÏóê Î≥¥Îü¨ Í∞îÏäµÎãàÎã§.",
            "Ï†ÑÏóê ÏÑ†Î¨ºÎ∞õÏùÄ ÏôïÏã≠Î¶¨ CGV Í≥®ÎìúÌÅ¥ÎùºÏä§ ÌëúÍ∞Ä ÏûàÏñ¥ÏÑú Î≥¥Îü¨Í∞îÏ£† „Öé„Öé",
            "Îã§Î¶¨ Î∞õÏπ®ÎåÄÎèÑ ÏûàÍ≥† Ìè≠Ïã†Ìïú ÏáºÌååÎùºÏÑú Ìé∏ÌïòÍ∏¥ Ìï©ÎãàÎã§. ÏùåÎ£åÏàòÎèÑ Ï£ºÍ≥† „Öã„Öã",
            "Í∑ºÎç∞ Ï†ú ÎèàÏ£ºÍ≥† Í≥®ÎìúÌÅ¥ÎùºÏä§ Ïù¥Ïö©ÌïòÏßÄÎäî ÏïäÏùÑ ÎìØ Ìï©ÎãàÎã§.",
            "",
            "Ïñ¥Ï®åÎì† Ï•¨ÎùºÍ∏∞ÏõîÎìú ÏòÅÌôî Í∞êÏÉÅÌèâÏùÑ Ïç®Î≥ºÍ≤åÏöî.",
            "ÏùºÎã® Ï†ÄÎäî 30ÎåÄ ÌõÑÎ∞òÏúºÎ°úÏç® Ï°∞Í∏à Ïú†ÏßÄÌïòÍ≤å Î¥§ÏäµÎãàÎã§. „Ö†.„Ö†",
            "Î¨ºÎ°† Í≥µÎ£° Î≥¥Îäî Ïû¨ÎØ∏Îäî Î∂ÑÎ™Ö ÏûàÏäµÎãàÎã§.",
            "Îã§Îßå, Ïò§ÎùΩÏòÅÌôîÎùºÎäî Í≤ÉÏùÄ ÏïåÏßÄÎßå Í∏¥Î∞ïÌïú ÏàúÍ∞ÑÏóê Ï¢Ä Ìô©ÎãπÌïú ÏãúÏ∏ÑÏóêÏù¥ÏÖòÏùÑ Î≥ºÎïåÎßàÎã§..."
        ],
        imageUrl: review_sample,
    };

    useEffect(() => {
        setTimeout(() => {
            setReview(sample);
            setLoading(false);
        }, 300);
    }, [reviewId]);

    if (loading) {
        return (
            <View style={styles.center}>
                <ActivityIndicator size="large" color="#555" />
            </View>
        );
    }

    if (!review) {
        return (
            <View style={styles.center}>
                <Text>Î¶¨Î∑∞Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.</Text>
            </View>
        );
    }

    const contentArray = Array.isArray(review.content) ? review.content : [review.content || ""];

    return (
        <ScrollView contentContainerStyle={styles.container}>
            {/* ÏÉÅÎã®: Ï†úÎ™©/ÏûëÏÑ±Ïûê/ÌèâÏ†ê */}
            <View style={styles.headerRow}>
                <Text style={styles.title}>{review.title}</Text>
                <View style={styles.infoBox}>
                    <Text style={styles.author}>{review.author}</Text>
                    <View style={styles.ratingBox}>
                        <Text style={styles.ratingLabel}>Î≥ÑÏ†ê</Text>
                        <Text style={styles.ratingStar}>‚òÖ</Text>
                        <Text style={styles.ratingScore}> {review.rating.toFixed(2)}</Text>
                    </View>
                </View>
            </View>
            <View style={styles.divider} />

            {/* Î≥∏Î¨∏ */}
            <View style={styles.contentArea}>
                {contentArray.slice(0, 4).map((line, idx) => (
                    <Text key={idx} style={styles.contentText}>{line}</Text>
                ))}

                <Image
                    source={review.imageUrl}
                    style={styles.reviewImage}
                    resizeMode="contain"
                />

                {contentArray.slice(4).map((line, idx) => (
                    <Text key={idx + 10} style={styles.contentText}>{line}</Text>
                ))}
            </View>

            {/* Í≥µÍ∞ê/ÎåìÍ∏Ä Î≤ÑÌäº & ÏòÅÏÉÅÏïàÎÇ¥ (Î∞ëÏ§Ñ ÏïÑÎûò) */}
            <View style={styles.actionRowWrap}>
                <View style={styles.actionRow}>
                    <TouchableOpacity style={styles.actionBtn}>
                        <Text style={styles.actionIcon}>‚ô°</Text>
                        <Text style={styles.actionText}>Í≥µÍ∞ê</Text>
                    </TouchableOpacity>
                    <TouchableOpacity style={styles.actionBtn}>
                        <Text style={styles.actionIcon}>üí¨</Text>
                        <Text style={styles.actionText}>ÎåìÍ∏Ä {sampleComments.length}</Text>
                    </TouchableOpacity>
                </View>
                <Text style={styles.videoBannerTextSmall}>
                    Ïù¥ ÏòÅÏÉÅÏù¥ Í∂ÅÍ∏àÌïòÎã§Î©¥? | <Text style={styles.underline}>ÏÉÅÏÑ∏Î≥¥Í∏∞</Text>
                </Text>
            </View>

            {/* ÎåìÍ∏Ä Î¶¨Ïä§Ìä∏ */}
            <View style={styles.commentSection}>
                {sampleComments.map(comment => (
                    <Comment key={comment.id} {...comment} />
                ))}
            </View>
        </ScrollView>
    );
};

const styles = StyleSheet.create({
    container: {
        padding: 32,
        backgroundColor: "#fff",
        alignItems: "center",
    },
    headerRow: {
        width: "100%",
        flexDirection: "row",
        justifyContent: "space-between",
        alignItems: "flex-start",
    },
    title: {
        fontSize: 28,
        fontWeight: "bold",
        letterSpacing: 2,
    },
    infoBox: {
        backgroundColor: "#F6F6F6",
        borderRadius: 10,
        paddingHorizontal: 18,
        paddingVertical: 10,
        alignItems: "center",
        flexDirection: "column",
        elevation: 1,
        borderWidth: 1,
        borderColor: "#ddd",
    },
    author: {
        fontSize: 16,
        marginBottom: 5,
        fontWeight: "500",
    },
    ratingBox: {
        flexDirection: "row",
        alignItems: "center",
    },
    ratingLabel: {
        fontSize: 15,
        color: "#333",
        marginRight: 4,
    },
    ratingStar: {
        fontSize: 17,
        color: "#FF4848",
        fontWeight: "bold",
    },
    ratingScore: {
        fontSize: 16,
        fontWeight: "bold",
        color: "#333",
    },
    divider: {
        width: "100%",
        height: 2,
        backgroundColor: "#111",
        marginVertical: 18,
    },
    contentArea: {
        width: "100%",
        alignItems: "center",
    },
    contentText: {
        fontSize: 17,
        color: "#222",
        lineHeight: 27,
        marginVertical: 2,
        textAlign: "center",
    },
    reviewImage: {
        width: "90%",
        height: 180,
        marginVertical: 24,
        borderRadius: 14,
        borderWidth: 1,
        borderColor: "#ddd",
        backgroundColor: "#f7f7f7",
    },
    actionRowWrap: {
        width: "100%",
        alignItems: "flex-start",
        marginBottom: 10,
    },
    actionRow: {
        flexDirection: "row",
        alignItems: "center",
        marginBottom: 2,
    },
    actionBtn: {
        flexDirection: "row",
        alignItems: "center",
        marginRight: 14,
        paddingVertical: 4,
        paddingHorizontal: 8,
        borderRadius: 8,
        backgroundColor: "#f7f7f7",
    },
    actionIcon: {
        fontSize: 18,
        marginRight: 3,
        color: "#d33",
    },
    actionText: {
        fontSize: 15,
        fontWeight: "500",
        color: "#333",
    },
    videoBannerTextSmall: {
        fontSize: 13,
        color: "#888",
        marginLeft: 4,
        marginTop: 1,
    },
    underline: {
        textDecorationLine: "underline",
        color: "#345",
    },
    commentSection: {
        width: "100%",
        marginTop: 6,
    },
    commentBox: {
        borderTopWidth: 1,
        borderTopColor: "#eee",
        paddingVertical: 12,
        paddingHorizontal: 8,
    },
    commentHeader: {
        flexDirection: "row",
        alignItems: "center",
        marginBottom: 3,
    },
    commentUser: {
        fontWeight: "bold",
        fontSize: 16,
        marginRight: 8,
    },
    commentDate: {
        color: "#888",
        fontSize: 13,
    },
    commentText: {
        fontSize: 15,
        marginBottom: 7,
    },
    commentFooter: {
        flexDirection: "row",
        alignItems: "center",
    },
    replyBtn: {
        fontSize: 13,
        color: "#555",
        marginRight: 10,
    },
    reportBtn: {
        fontSize: 13,
        color: "#999",
        marginRight: 12,
    },
    commentLike: {
        flexDirection: "row",
        alignItems: "center",
    },
    likeIcon: {
        color: "#d33",
        fontSize: 16,
        marginRight: 3,
    },
    likeCount: {
        fontSize: 13,
        color: "#666",
    },
    center: {
        flex: 1,
        alignItems: "center",
        justifyContent: "center",
    },
});

export default ReviewDetail;
